

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// Audiomete
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Audiometer : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Audiometer entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Audiometer()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Audiometer(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Audiometer> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Audiometer.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometer_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometer_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Audiometer.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Audiometer.DetailsClass.SetValue(this, global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> takenon
        {
            get
            {
                return global::LightSwitchApplication.Audiometer.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.takenon);
            }
            set
            {
                global::LightSwitchApplication.Audiometer.DetailsClass.SetValue(this, global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.takenon, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void takenon_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void takenon_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void takenon_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Pacient Pacient
        {
            get
            {
                return global::LightSwitchApplication.Audiometer.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Pacient);
            }
            set
            {
                global::LightSwitchApplication.Audiometer.DetailsClass.SetValue(this, global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Pacient, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacient_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacient_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacient_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Audiogram> Audiogram
        {
            get
            {
                return global::LightSwitchApplication.Audiometer.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Audiogram);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Audiogram> AudiogramQuery
        {
            get
            {
                return global::LightSwitchApplication.Audiometer.DetailsClass.GetQuery(this, global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Audiogram);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Audiometer,
                global::LightSwitchApplication.Audiometer.DetailsClass,
                global::LightSwitchApplication.Audiometer.DetailsClass.IImplementation,
                global::LightSwitchApplication.Audiometer.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass>.Entry
                __AudiometerEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass>.Entry(
                    global::LightSwitchApplication.Audiometer.DetailsClass.__Audiometer_CreateNew,
                    global::LightSwitchApplication.Audiometer.DetailsClass.__Audiometer_Created,
                    global::LightSwitchApplication.Audiometer.DetailsClass.__Audiometer_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Audiometer __Audiometer_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Audiometer> es)
            {
                return new global::LightSwitchApplication.Audiometer(es);
            }
            private static void __Audiometer_Created(global::LightSwitchApplication.Audiometer e)
            {
                e.Audiometer_Created();
            }
            private static bool __Audiometer_AllowSaveWithErrors(global::LightSwitchApplication.Audiometer e)
            {
                bool result = false;
                e.Audiometer_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Audiometer.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::System.Nullable<global::System.DateTime>> takenon
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.takenon) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Pacient> Pacient
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Pacient) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Pacient>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Audiogram> Audiogram
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Audiogram) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Audiogram>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new global::System.Nullable<global::System.DateTime> takenon { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Pacient { get; set; }
                new global::System.Collections.IEnumerable Audiogram { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiometer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, int>.Data> c, global::LightSwitchApplication.Audiometer.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Audiometer e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Audiometer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Audiometer.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Audiometer.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Audiometer e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    takenon = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "takenon",
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._takenon_Stub,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._takenon_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._takenon_Validate,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._takenon_GetImplementationValue,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._takenon_SetImplementationValue,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._takenon_OnValueChanged);
                private static void _takenon_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiometer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Audiometer.DetailsClass d, object sf)
                {
                    c(d, ref d._takenon, sf);
                }
                private static bool _takenon_ComputeIsReadOnly(global::LightSwitchApplication.Audiometer e)
                {
                    bool result = false;
                    e.takenon_IsReadOnly(ref result);
                    return result;
                }
                private static void _takenon_Validate(global::LightSwitchApplication.Audiometer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.takenon_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _takenon_GetImplementationValue(global::LightSwitchApplication.Audiometer.DetailsClass d)
                {
                    return d.ImplementationEntity.takenon;
                }
                private static void _takenon_SetImplementationValue(global::LightSwitchApplication.Audiometer.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.takenon = global::LightSwitchApplication.Audiometer.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _takenon_OnValueChanged(global::LightSwitchApplication.Audiometer e)
                {
                    e.takenon_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Pacient>.Entry
                    Pacient = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Pacient>.Entry(
                        "Pacient",
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Pacient_Stub,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Pacient_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Pacient_Validate,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Pacient_GetCoreImplementationValue,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Pacient_GetImplementationValue,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Pacient_SetImplementationValue,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Pacient_Refresh,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Pacient_OnValueChanged);
                private static void _Pacient_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiometer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Pacient>.Data> c, global::LightSwitchApplication.Audiometer.DetailsClass d, object sf)
                {
                    c(d, ref d._Pacient, sf);
                }
                private static bool _Pacient_ComputeIsReadOnly(global::LightSwitchApplication.Audiometer e)
                {
                    bool result = false;
                    e.Pacient_IsReadOnly(ref result);
                    return result;
                }
                private static void _Pacient_Validate(global::LightSwitchApplication.Audiometer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Pacient_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Pacient_GetCoreImplementationValue(global::LightSwitchApplication.Audiometer.DetailsClass d)
                {
                    return d.ImplementationEntity.Pacient;
                }
                private static global::LightSwitchApplication.Pacient _Pacient_GetImplementationValue(global::LightSwitchApplication.Audiometer.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass>(global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Pacient, ref d._Pacient);
                }
                private static void _Pacient_SetImplementationValue(global::LightSwitchApplication.Audiometer.DetailsClass d, global::LightSwitchApplication.Pacient v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Pacient, ref d._Pacient, (i, ev) => i.Pacient = ev, v);
                }
                private static void _Pacient_Refresh(global::LightSwitchApplication.Audiometer.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Pacient, ref d._Pacient);
                }
                private static void _Pacient_OnValueChanged(global::LightSwitchApplication.Audiometer e)
                {
                    e.Pacient_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Audiogram>.Entry
                    Audiogram = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Audiogram>.Entry(
                        "Audiogram",
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Audiogram_Stub,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Audiogram_GetReferencedEntities,
                        global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties._Audiogram_GetEntityCollection);
                private static void _Audiogram_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiometer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Audiogram>.Data> c, global::LightSwitchApplication.Audiometer.DetailsClass d, object sf)
                {
                    c(d, ref d._Audiogram, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiogram> _Audiogram_GetReferencedEntities(global::LightSwitchApplication.Audiometer.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass>(global::LightSwitchApplication.Audiometer.DetailsClass.PropertySetProperties.Audiogram, ref d._Audiogram);
                }
                private static global::System.Collections.IEnumerable _Audiogram_GetEntityCollection(global::LightSwitchApplication.Audiometer.DetailsClass d)
                {
                    return d.ImplementationEntity.Audiogram;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _takenon;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Pacient>.Data _Pacient;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass, global::LightSwitchApplication.Audiogram>.Data _Audiogram;
            
        }
    
        #endregion
    }
    
    #endregion
}
