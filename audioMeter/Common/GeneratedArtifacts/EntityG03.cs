

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Audiogram : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Audiogram entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Audiogram()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Audiogram(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Audiogram> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Audiogram.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiogram_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiogram_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Audiogram.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Audiogram.DetailsClass.SetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Ear
        {
            get
            {
                return global::LightSwitchApplication.Audiogram.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Ear);
            }
            set
            {
                global::LightSwitchApplication.Audiogram.DetailsClass.SetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Ear, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Ear_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Ear_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Ear_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Frequency
        {
            get
            {
                return global::LightSwitchApplication.Audiogram.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Frequency);
            }
            set
            {
                global::LightSwitchApplication.Audiogram.DetailsClass.SetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Frequency, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Frequency_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Frequency_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Frequency_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Intensity
        {
            get
            {
                return global::LightSwitchApplication.Audiogram.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Intensity);
            }
            set
            {
                global::LightSwitchApplication.Audiogram.DetailsClass.SetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Intensity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Intensity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Intensity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Intensity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string reponse
        {
            get
            {
                return global::LightSwitchApplication.Audiogram.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.reponse);
            }
            set
            {
                global::LightSwitchApplication.Audiogram.DetailsClass.SetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.reponse, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void reponse_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void reponse_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void reponse_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Audiometer Audiometer
        {
            get
            {
                return global::LightSwitchApplication.Audiogram.DetailsClass.GetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Audiometer);
            }
            set
            {
                global::LightSwitchApplication.Audiogram.DetailsClass.SetValue(this, global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Audiometer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometer_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Audiogram,
                global::LightSwitchApplication.Audiogram.DetailsClass,
                global::LightSwitchApplication.Audiogram.DetailsClass.IImplementation,
                global::LightSwitchApplication.Audiogram.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass>.Entry
                __AudiogramEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass>.Entry(
                    global::LightSwitchApplication.Audiogram.DetailsClass.__Audiogram_CreateNew,
                    global::LightSwitchApplication.Audiogram.DetailsClass.__Audiogram_Created,
                    global::LightSwitchApplication.Audiogram.DetailsClass.__Audiogram_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Audiogram __Audiogram_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Audiogram> es)
            {
                return new global::LightSwitchApplication.Audiogram(es);
            }
            private static void __Audiogram_Created(global::LightSwitchApplication.Audiogram e)
            {
                e.Audiogram_Created();
            }
            private static bool __Audiogram_AllowSaveWithErrors(global::LightSwitchApplication.Audiogram e)
            {
                bool result = false;
                e.Audiogram_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Audiogram.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string> Ear
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Ear) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int> Frequency
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Frequency) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int> Intensity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Intensity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string> reponse
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.reponse) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, global::LightSwitchApplication.Audiometer> Audiometer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Audiometer) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, global::LightSwitchApplication.Audiometer>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string Ear { get; set; }
                new int Frequency { get; set; }
                new int Intensity { get; set; }
                new string reponse { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Audiometer { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiogram.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Data> c, global::LightSwitchApplication.Audiogram.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Audiogram e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Audiogram e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Audiogram e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>.Entry
                    Ear = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>.Entry(
                        "Ear",
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Ear_Stub,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Ear_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Ear_Validate,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Ear_GetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Ear_SetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Ear_OnValueChanged);
                private static void _Ear_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiogram.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>.Data> c, global::LightSwitchApplication.Audiogram.DetailsClass d, object sf)
                {
                    c(d, ref d._Ear, sf);
                }
                private static bool _Ear_ComputeIsReadOnly(global::LightSwitchApplication.Audiogram e)
                {
                    bool result = false;
                    e.Ear_IsReadOnly(ref result);
                    return result;
                }
                private static void _Ear_Validate(global::LightSwitchApplication.Audiogram e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Ear_Validate(r);
                }
                private static string _Ear_GetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d)
                {
                    return d.ImplementationEntity.Ear;
                }
                private static void _Ear_SetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Ear = v;
                }
                private static void _Ear_OnValueChanged(global::LightSwitchApplication.Audiogram e)
                {
                    e.Ear_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Entry
                    Frequency = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Entry(
                        "Frequency",
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Frequency_Stub,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Frequency_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Frequency_Validate,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Frequency_GetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Frequency_SetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Frequency_OnValueChanged);
                private static void _Frequency_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiogram.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Data> c, global::LightSwitchApplication.Audiogram.DetailsClass d, object sf)
                {
                    c(d, ref d._Frequency, sf);
                }
                private static bool _Frequency_ComputeIsReadOnly(global::LightSwitchApplication.Audiogram e)
                {
                    bool result = false;
                    e.Frequency_IsReadOnly(ref result);
                    return result;
                }
                private static void _Frequency_Validate(global::LightSwitchApplication.Audiogram e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Frequency_Validate(r);
                }
                private static int _Frequency_GetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d)
                {
                    return d.ImplementationEntity.Frequency;
                }
                private static void _Frequency_SetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Frequency = v;
                }
                private static void _Frequency_OnValueChanged(global::LightSwitchApplication.Audiogram e)
                {
                    e.Frequency_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Entry
                    Intensity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Entry(
                        "Intensity",
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Intensity_Stub,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Intensity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Intensity_Validate,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Intensity_GetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Intensity_SetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Intensity_OnValueChanged);
                private static void _Intensity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiogram.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Data> c, global::LightSwitchApplication.Audiogram.DetailsClass d, object sf)
                {
                    c(d, ref d._Intensity, sf);
                }
                private static bool _Intensity_ComputeIsReadOnly(global::LightSwitchApplication.Audiogram e)
                {
                    bool result = false;
                    e.Intensity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Intensity_Validate(global::LightSwitchApplication.Audiogram e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Intensity_Validate(r);
                }
                private static int _Intensity_GetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d)
                {
                    return d.ImplementationEntity.Intensity;
                }
                private static void _Intensity_SetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Intensity = v;
                }
                private static void _Intensity_OnValueChanged(global::LightSwitchApplication.Audiogram e)
                {
                    e.Intensity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>.Entry
                    reponse = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>.Entry(
                        "reponse",
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._reponse_Stub,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._reponse_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._reponse_Validate,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._reponse_GetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._reponse_SetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._reponse_OnValueChanged);
                private static void _reponse_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiogram.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>.Data> c, global::LightSwitchApplication.Audiogram.DetailsClass d, object sf)
                {
                    c(d, ref d._reponse, sf);
                }
                private static bool _reponse_ComputeIsReadOnly(global::LightSwitchApplication.Audiogram e)
                {
                    bool result = false;
                    e.reponse_IsReadOnly(ref result);
                    return result;
                }
                private static void _reponse_Validate(global::LightSwitchApplication.Audiogram e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.reponse_Validate(r);
                }
                private static string _reponse_GetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d)
                {
                    return d.ImplementationEntity.reponse;
                }
                private static void _reponse_SetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d, string v)
                {
                    d.ImplementationEntity.reponse = v;
                }
                private static void _reponse_OnValueChanged(global::LightSwitchApplication.Audiogram e)
                {
                    e.reponse_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, global::LightSwitchApplication.Audiometer>.Entry
                    Audiometer = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, global::LightSwitchApplication.Audiometer>.Entry(
                        "Audiometer",
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Audiometer_Stub,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Audiometer_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Audiometer_Validate,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Audiometer_GetCoreImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Audiometer_GetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Audiometer_SetImplementationValue,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Audiometer_Refresh,
                        global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties._Audiometer_OnValueChanged);
                private static void _Audiometer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audiogram.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, global::LightSwitchApplication.Audiometer>.Data> c, global::LightSwitchApplication.Audiogram.DetailsClass d, object sf)
                {
                    c(d, ref d._Audiometer, sf);
                }
                private static bool _Audiometer_ComputeIsReadOnly(global::LightSwitchApplication.Audiogram e)
                {
                    bool result = false;
                    e.Audiometer_IsReadOnly(ref result);
                    return result;
                }
                private static void _Audiometer_Validate(global::LightSwitchApplication.Audiogram e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Audiometer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Audiometer_GetCoreImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d)
                {
                    return d.ImplementationEntity.Audiometer;
                }
                private static global::LightSwitchApplication.Audiometer _Audiometer_GetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass>(global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Audiometer, ref d._Audiometer);
                }
                private static void _Audiometer_SetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass d, global::LightSwitchApplication.Audiometer v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Audiometer, ref d._Audiometer, (i, ev) => i.Audiometer = ev, v);
                }
                private static void _Audiometer_Refresh(global::LightSwitchApplication.Audiogram.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Audiogram.DetailsClass.PropertySetProperties.Audiometer, ref d._Audiometer);
                }
                private static void _Audiometer_OnValueChanged(global::LightSwitchApplication.Audiogram e)
                {
                    e.Audiometer_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>.Data _Ear;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Data _Frequency;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, int>.Data _Intensity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, string>.Data _reponse;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audiogram, global::LightSwitchApplication.Audiogram.DetailsClass, global::LightSwitchApplication.Audiometer>.Data _Audiometer;
            
        }
    
        #endregion
    }
    
    #endregion
}
