

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// Pacients personal data
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Pacient : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Pacient entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Pacient()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Pacient(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Pacient> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Pacient.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacient_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacient_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Pacient.DetailsClass.SetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string fname
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.fname);
            }
            set
            {
                global::LightSwitchApplication.Pacient.DetailsClass.SetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.fname, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fname_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fname_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void fname_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string lname
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.lname);
            }
            set
            {
                global::LightSwitchApplication.Pacient.DetailsClass.SetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.lname, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void lname_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void lname_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void lname_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string idno
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.idno);
            }
            set
            {
                global::LightSwitchApplication.Pacient.DetailsClass.SetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.idno, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void idno_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void idno_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void idno_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime dob
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.dob);
            }
            set
            {
                global::LightSwitchApplication.Pacient.DetailsClass.SetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.dob, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dob_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dob_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dob_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string telf
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.telf);
            }
            set
            {
                global::LightSwitchApplication.Pacient.DetailsClass.SetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.telf, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void telf_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void telf_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void telf_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string email
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.email);
            }
            set
            {
                global::LightSwitchApplication.Pacient.DetailsClass.SetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.email, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void email_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void email_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void email_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime createdon
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.createdon);
            }
            set
            {
                global::LightSwitchApplication.Pacient.DetailsClass.SetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.createdon, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void createdon_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void createdon_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void createdon_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Audiometer> Audiometer
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetValue(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.Audiometer);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Audiometer> AudiometerQuery
        {
            get
            {
                return global::LightSwitchApplication.Pacient.DetailsClass.GetQuery(this, global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.Audiometer);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Pacient,
                global::LightSwitchApplication.Pacient.DetailsClass,
                global::LightSwitchApplication.Pacient.DetailsClass.IImplementation,
                global::LightSwitchApplication.Pacient.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass>.Entry
                __PacientEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass>.Entry(
                    global::LightSwitchApplication.Pacient.DetailsClass.__Pacient_CreateNew,
                    global::LightSwitchApplication.Pacient.DetailsClass.__Pacient_Created,
                    global::LightSwitchApplication.Pacient.DetailsClass.__Pacient_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Pacient __Pacient_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Pacient> es)
            {
                return new global::LightSwitchApplication.Pacient(es);
            }
            private static void __Pacient_Created(global::LightSwitchApplication.Pacient e)
            {
                e.Pacient_Created();
            }
            private static bool __Pacient_AllowSaveWithErrors(global::LightSwitchApplication.Pacient e)
            {
                bool result = false;
                e.Pacient_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Pacient.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string> fname
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.fname) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string> lname
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.lname) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string> idno
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.idno) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime> dob
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.dob) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string> telf
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.telf) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string> email
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.email) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime> createdon
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.createdon) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::LightSwitchApplication.Audiometer> Audiometer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.Audiometer) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::LightSwitchApplication.Audiometer>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string fname { get; set; }
                new string lname { get; set; }
                new string idno { get; set; }
                new global::System.DateTime dob { get; set; }
                new string telf { get; set; }
                new string email { get; set; }
                new global::System.DateTime createdon { get; set; }
                new global::System.Collections.IEnumerable Audiometer { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Pacient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, int>.Data> c, global::LightSwitchApplication.Pacient.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Pacient e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Pacient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Pacient e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry
                    fname = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry(
                        "fname",
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._fname_Stub,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._fname_ComputeIsReadOnly,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._fname_Validate,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._fname_GetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._fname_SetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._fname_OnValueChanged);
                private static void _fname_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Pacient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data> c, global::LightSwitchApplication.Pacient.DetailsClass d, object sf)
                {
                    c(d, ref d._fname, sf);
                }
                private static bool _fname_ComputeIsReadOnly(global::LightSwitchApplication.Pacient e)
                {
                    bool result = false;
                    e.fname_IsReadOnly(ref result);
                    return result;
                }
                private static void _fname_Validate(global::LightSwitchApplication.Pacient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.fname_Validate(r);
                }
                private static string _fname_GetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.ImplementationEntity.fname;
                }
                private static void _fname_SetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.fname = v;
                }
                private static void _fname_OnValueChanged(global::LightSwitchApplication.Pacient e)
                {
                    e.fname_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry
                    lname = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry(
                        "lname",
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._lname_Stub,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._lname_ComputeIsReadOnly,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._lname_Validate,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._lname_GetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._lname_SetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._lname_OnValueChanged);
                private static void _lname_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Pacient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data> c, global::LightSwitchApplication.Pacient.DetailsClass d, object sf)
                {
                    c(d, ref d._lname, sf);
                }
                private static bool _lname_ComputeIsReadOnly(global::LightSwitchApplication.Pacient e)
                {
                    bool result = false;
                    e.lname_IsReadOnly(ref result);
                    return result;
                }
                private static void _lname_Validate(global::LightSwitchApplication.Pacient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.lname_Validate(r);
                }
                private static string _lname_GetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.ImplementationEntity.lname;
                }
                private static void _lname_SetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.lname = v;
                }
                private static void _lname_OnValueChanged(global::LightSwitchApplication.Pacient e)
                {
                    e.lname_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry
                    idno = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry(
                        "idno",
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._idno_Stub,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._idno_ComputeIsReadOnly,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._idno_Validate,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._idno_GetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._idno_SetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._idno_OnValueChanged);
                private static void _idno_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Pacient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data> c, global::LightSwitchApplication.Pacient.DetailsClass d, object sf)
                {
                    c(d, ref d._idno, sf);
                }
                private static bool _idno_ComputeIsReadOnly(global::LightSwitchApplication.Pacient e)
                {
                    bool result = false;
                    e.idno_IsReadOnly(ref result);
                    return result;
                }
                private static void _idno_Validate(global::LightSwitchApplication.Pacient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.idno_Validate(r);
                }
                private static string _idno_GetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.ImplementationEntity.idno;
                }
                private static void _idno_SetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.idno = v;
                }
                private static void _idno_OnValueChanged(global::LightSwitchApplication.Pacient e)
                {
                    e.idno_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>.Entry
                    dob = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>.Entry(
                        "dob",
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._dob_Stub,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._dob_ComputeIsReadOnly,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._dob_Validate,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._dob_GetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._dob_SetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._dob_OnValueChanged);
                private static void _dob_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Pacient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Pacient.DetailsClass d, object sf)
                {
                    c(d, ref d._dob, sf);
                }
                private static bool _dob_ComputeIsReadOnly(global::LightSwitchApplication.Pacient e)
                {
                    bool result = false;
                    e.dob_IsReadOnly(ref result);
                    return result;
                }
                private static void _dob_Validate(global::LightSwitchApplication.Pacient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.dob_Validate(r);
                }
                private static global::System.DateTime _dob_GetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.ImplementationEntity.dob;
                }
                private static void _dob_SetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.dob = global::LightSwitchApplication.Pacient.DetailsClass.TruncateDate(v);
                }
                private static void _dob_OnValueChanged(global::LightSwitchApplication.Pacient e)
                {
                    e.dob_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry
                    telf = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry(
                        "telf",
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._telf_Stub,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._telf_ComputeIsReadOnly,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._telf_Validate,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._telf_GetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._telf_SetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._telf_OnValueChanged);
                private static void _telf_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Pacient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data> c, global::LightSwitchApplication.Pacient.DetailsClass d, object sf)
                {
                    c(d, ref d._telf, sf);
                }
                private static bool _telf_ComputeIsReadOnly(global::LightSwitchApplication.Pacient e)
                {
                    bool result = false;
                    e.telf_IsReadOnly(ref result);
                    return result;
                }
                private static void _telf_Validate(global::LightSwitchApplication.Pacient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.telf_Validate(r);
                }
                private static string _telf_GetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.ImplementationEntity.telf;
                }
                private static void _telf_SetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.telf = v;
                }
                private static void _telf_OnValueChanged(global::LightSwitchApplication.Pacient e)
                {
                    e.telf_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry
                    email = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Entry(
                        "email",
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._email_Stub,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._email_ComputeIsReadOnly,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._email_Validate,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._email_GetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._email_SetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._email_OnValueChanged);
                private static void _email_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Pacient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data> c, global::LightSwitchApplication.Pacient.DetailsClass d, object sf)
                {
                    c(d, ref d._email, sf);
                }
                private static bool _email_ComputeIsReadOnly(global::LightSwitchApplication.Pacient e)
                {
                    bool result = false;
                    e.email_IsReadOnly(ref result);
                    return result;
                }
                private static void _email_Validate(global::LightSwitchApplication.Pacient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.email_Validate(r);
                }
                private static string _email_GetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.ImplementationEntity.email;
                }
                private static void _email_SetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d, string v)
                {
                    d.ImplementationEntity.email = v;
                }
                private static void _email_OnValueChanged(global::LightSwitchApplication.Pacient e)
                {
                    e.email_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>.Entry
                    createdon = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>.Entry(
                        "createdon",
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._createdon_Stub,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._createdon_ComputeIsReadOnly,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._createdon_Validate,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._createdon_GetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._createdon_SetImplementationValue,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._createdon_OnValueChanged);
                private static void _createdon_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Pacient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Pacient.DetailsClass d, object sf)
                {
                    c(d, ref d._createdon, sf);
                }
                private static bool _createdon_ComputeIsReadOnly(global::LightSwitchApplication.Pacient e)
                {
                    bool result = false;
                    e.createdon_IsReadOnly(ref result);
                    return result;
                }
                private static void _createdon_Validate(global::LightSwitchApplication.Pacient e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.createdon_Validate(r);
                }
                private static global::System.DateTime _createdon_GetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.ImplementationEntity.createdon;
                }
                private static void _createdon_SetImplementationValue(global::LightSwitchApplication.Pacient.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.createdon = global::LightSwitchApplication.Pacient.DetailsClass.TruncateDate(v);
                }
                private static void _createdon_OnValueChanged(global::LightSwitchApplication.Pacient e)
                {
                    e.createdon_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::LightSwitchApplication.Audiometer>.Entry
                    Audiometer = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::LightSwitchApplication.Audiometer>.Entry(
                        "Audiometer",
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._Audiometer_Stub,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._Audiometer_GetReferencedEntities,
                        global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties._Audiometer_GetEntityCollection);
                private static void _Audiometer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Pacient.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::LightSwitchApplication.Audiometer>.Data> c, global::LightSwitchApplication.Pacient.DetailsClass d, object sf)
                {
                    c(d, ref d._Audiometer, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiometer> _Audiometer_GetReferencedEntities(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Audiometer, global::LightSwitchApplication.Audiometer.DetailsClass>(global::LightSwitchApplication.Pacient.DetailsClass.PropertySetProperties.Audiometer, ref d._Audiometer);
                }
                private static global::System.Collections.IEnumerable _Audiometer_GetEntityCollection(global::LightSwitchApplication.Pacient.DetailsClass d)
                {
                    return d.ImplementationEntity.Audiometer;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data _fname;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data _lname;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data _idno;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>.Data _dob;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data _telf;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, string>.Data _email;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::System.DateTime>.Data _createdon;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Pacient, global::LightSwitchApplication.Pacient.DetailsClass, global::LightSwitchApplication.Audiometer>.Data _Audiometer;
            
        }
    
        #endregion
    }
    
    #endregion
}
