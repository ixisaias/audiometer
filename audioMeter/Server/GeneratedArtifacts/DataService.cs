//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Inserting(global::LightSwitchApplication.Pacient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Inserted(global::LightSwitchApplication.Pacient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Updating(global::LightSwitchApplication.Pacient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Updated(global::LightSwitchApplication.Pacient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Deleting(global::LightSwitchApplication.Pacient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Deleted(global::LightSwitchApplication.Pacient entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Validate(global::LightSwitchApplication.Pacient entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Inserting(global::LightSwitchApplication.Audiometer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Inserted(global::LightSwitchApplication.Audiometer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Updating(global::LightSwitchApplication.Audiometer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Updated(global::LightSwitchApplication.Audiometer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Deleting(global::LightSwitchApplication.Audiometer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Deleted(global::LightSwitchApplication.Audiometer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Validate(global::LightSwitchApplication.Audiometer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Inserting(global::LightSwitchApplication.Audiogram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Inserted(global::LightSwitchApplication.Audiogram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Updating(global::LightSwitchApplication.Audiogram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Updated(global::LightSwitchApplication.Audiogram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Deleting(global::LightSwitchApplication.Audiogram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Deleted(global::LightSwitchApplication.Audiogram entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Validate(global::LightSwitchApplication.Audiogram entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Pacient> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Pacient> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Pacient> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Pacient> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Pacient> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Pacient> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Pacients_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Audiometer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiometer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Audiometer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiometer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Audiometer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiometer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiometers_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Audiogram> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiogram> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Audiogram> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiogram> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Audiogram> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiogram> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiograms_All_ExecuteFailed(global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pacient>
                __PacientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pacient>(
                    "Pacients",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Validate);
            private static bool __Pacients_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Pacients_CanInsert(ref result);
                return result;
            }
            private static bool __Pacients_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Pacients_CanUpdate(ref result);
                return result;
            }
            private static bool __Pacients_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Pacients_CanDelete(ref result);
                return result;
            }
            private static bool __Pacients_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Pacients_CanRead(ref result);
                return result;
            }
            private static void __Pacients_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pacient e)
            {
                d.Pacients_Inserting(e);
            }
            private static void __Pacients_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pacient e)
            {
                d.Pacients_Inserted(e);
            }
            private static void __Pacients_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pacient e)
            {
                d.Pacients_Updating(e);
            }
            private static void __Pacients_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pacient e)
            {
                d.Pacients_Updated(e);
            }
            private static void __Pacients_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pacient e)
            {
                d.Pacients_Deleting(e);
            }
            private static void __Pacients_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pacient e)
            {
                d.Pacients_Deleted(e);
            }
            private static void __Pacients_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Pacient e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Pacients_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiometer>
                __AudiometersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiometer>(
                    "Audiometers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Validate);
            private static bool __Audiometers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiometers_CanInsert(ref result);
                return result;
            }
            private static bool __Audiometers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiometers_CanUpdate(ref result);
                return result;
            }
            private static bool __Audiometers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiometers_CanDelete(ref result);
                return result;
            }
            private static bool __Audiometers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiometers_CanRead(ref result);
                return result;
            }
            private static void __Audiometers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiometer e)
            {
                d.Audiometers_Inserting(e);
            }
            private static void __Audiometers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiometer e)
            {
                d.Audiometers_Inserted(e);
            }
            private static void __Audiometers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiometer e)
            {
                d.Audiometers_Updating(e);
            }
            private static void __Audiometers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiometer e)
            {
                d.Audiometers_Updated(e);
            }
            private static void __Audiometers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiometer e)
            {
                d.Audiometers_Deleting(e);
            }
            private static void __Audiometers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiometer e)
            {
                d.Audiometers_Deleted(e);
            }
            private static void __Audiometers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiometer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Audiometers_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiogram>
                __AudiogramsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiogram>(
                    "Audiograms",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Validate);
            private static bool __Audiograms_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiograms_CanInsert(ref result);
                return result;
            }
            private static bool __Audiograms_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiograms_CanUpdate(ref result);
                return result;
            }
            private static bool __Audiograms_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiograms_CanDelete(ref result);
                return result;
            }
            private static bool __Audiograms_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiograms_CanRead(ref result);
                return result;
            }
            private static void __Audiograms_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiogram e)
            {
                d.Audiograms_Inserting(e);
            }
            private static void __Audiograms_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiogram e)
            {
                d.Audiograms_Inserted(e);
            }
            private static void __Audiograms_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiogram e)
            {
                d.Audiograms_Updating(e);
            }
            private static void __Audiograms_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiogram e)
            {
                d.Audiograms_Updated(e);
            }
            private static void __Audiograms_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiogram e)
            {
                d.Audiograms_Deleting(e);
            }
            private static void __Audiograms_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiogram e)
            {
                d.Audiograms_Deleted(e);
            }
            private static void __Audiograms_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audiogram e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Audiograms_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pacient>
                __Pacients_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pacient>(
                    "Pacients_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_Single_PreprocessQuery);
            private static bool __Pacients_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Pacients_Single_CanExecute(ref r);
                return r;
            }
            private static void __Pacients_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Pacients_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Pacients_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Pacients_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Pacient>)args[1]);
            }
            private static void __Pacients_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Pacients_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Pacients_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Pacient> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Pacient>)args[1];
                d.Pacients_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pacient>
                __Pacients_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pacient>(
                    "Pacients_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_SingleOrDefault_PreprocessQuery);
            private static bool __Pacients_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Pacients_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Pacients_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Pacients_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Pacients_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Pacients_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Pacient>)args[1]);
            }
            private static void __Pacients_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Pacients_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Pacients_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Pacient> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Pacient>)args[1];
                d.Pacients_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pacient>
                __Pacients_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Pacient>(
                    "Pacients_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Pacients_All_PreprocessQuery);
            private static bool __Pacients_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Pacients_All_CanExecute(ref r);
                return r;
            }
            private static void __Pacients_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Pacients_All_Executing();
            }
            private static void __Pacients_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Pacients_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Pacient>)args[0]);
            }
            private static void __Pacients_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Pacients_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Pacients_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Pacient> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Pacient>)args[0];
                d.Pacients_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiometer>
                __Audiometers_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiometer>(
                    "Audiometers_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_Single_PreprocessQuery);
            private static bool __Audiometers_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Audiometers_Single_CanExecute(ref r);
                return r;
            }
            private static void __Audiometers_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiometers_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Audiometers_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiometers_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiometer>)args[1]);
            }
            private static void __Audiometers_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Audiometers_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Audiometers_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Audiometer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Audiometer>)args[1];
                d.Audiometers_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiometer>
                __Audiometers_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiometer>(
                    "Audiometers_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_SingleOrDefault_PreprocessQuery);
            private static bool __Audiometers_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Audiometers_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Audiometers_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiometers_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Audiometers_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiometers_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiometer>)args[1]);
            }
            private static void __Audiometers_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Audiometers_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Audiometers_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Audiometer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Audiometer>)args[1];
                d.Audiometers_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiometer>
                __Audiometers_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiometer>(
                    "Audiometers_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiometers_All_PreprocessQuery);
            private static bool __Audiometers_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Audiometers_All_CanExecute(ref r);
                return r;
            }
            private static void __Audiometers_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiometers_All_Executing();
            }
            private static void __Audiometers_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiometers_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiometer>)args[0]);
            }
            private static void __Audiometers_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Audiometers_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Audiometers_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Audiometer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Audiometer>)args[0];
                d.Audiometers_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiogram>
                __Audiograms_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiogram>(
                    "Audiograms_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_Single_PreprocessQuery);
            private static bool __Audiograms_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Audiograms_Single_CanExecute(ref r);
                return r;
            }
            private static void __Audiograms_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiograms_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Audiograms_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiograms_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiogram>)args[1]);
            }
            private static void __Audiograms_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Audiograms_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Audiograms_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Audiogram> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Audiogram>)args[1];
                d.Audiograms_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiogram>
                __Audiograms_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiogram>(
                    "Audiograms_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_SingleOrDefault_PreprocessQuery);
            private static bool __Audiograms_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Audiograms_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Audiograms_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiograms_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Audiograms_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiograms_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiogram>)args[1]);
            }
            private static void __Audiograms_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Audiograms_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Audiograms_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Audiogram> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Audiogram>)args[1];
                d.Audiograms_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiogram>
                __Audiograms_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audiogram>(
                    "Audiograms_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiograms_All_PreprocessQuery);
            private static bool __Audiograms_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Audiograms_All_CanExecute(ref r);
                return r;
            }
            private static void __Audiograms_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiograms_All_Executing();
            }
            private static void __Audiograms_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Audiograms_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Audiogram>)args[0]);
            }
            private static void __Audiograms_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Audiograms_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Audiograms_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Audiogram> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Audiogram>)args[0];
                d.Audiograms_All_PreprocessQuery(ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
