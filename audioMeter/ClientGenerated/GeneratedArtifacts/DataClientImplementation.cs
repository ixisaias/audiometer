//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region Pacient
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Pacient :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Pacient.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string fname
        {
            get
            {
                return this._fname;
            }
            set
            {
                if (this._fname != value)
                {
                    this.RaiseDataMemberChanging("fname");
                    this.ValidateProperty("fname", value);
                    this._fname = value;
                    this.RaiseDataMemberChanged("fname");
                }
            }
        }
        private string _fname;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string lname
        {
            get
            {
                return this._lname;
            }
            set
            {
                if (this._lname != value)
                {
                    this.RaiseDataMemberChanging("lname");
                    this.ValidateProperty("lname", value);
                    this._lname = value;
                    this.RaiseDataMemberChanged("lname");
                }
            }
        }
        private string _lname;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string idno
        {
            get
            {
                return this._idno;
            }
            set
            {
                if (this._idno != value)
                {
                    this.RaiseDataMemberChanging("idno");
                    this.ValidateProperty("idno", value);
                    this._idno = value;
                    this.RaiseDataMemberChanged("idno");
                }
            }
        }
        private string _idno;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime dob
        {
            get
            {
                return this._dob;
            }
            set
            {
                if (this._dob != value)
                {
                    this.RaiseDataMemberChanging("dob");
                    this.ValidateProperty("dob", value);
                    this._dob = value;
                    this.RaiseDataMemberChanged("dob");
                }
            }
        }
        private global::System.DateTime _dob;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string telf
        {
            get
            {
                return this._telf;
            }
            set
            {
                if (this._telf != value)
                {
                    this.RaiseDataMemberChanging("telf");
                    this.ValidateProperty("telf", value);
                    this._telf = value;
                    this.RaiseDataMemberChanged("telf");
                }
            }
        }
        private string _telf;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string email
        {
            get
            {
                return this._email;
            }
            set
            {
                if (this._email != value)
                {
                    this.RaiseDataMemberChanging("email");
                    this.ValidateProperty("email", value);
                    this._email = value;
                    this.RaiseDataMemberChanged("email");
                }
            }
        }
        private string _email;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime createdon
        {
            get
            {
                return this._createdon;
            }
            set
            {
                if (this._createdon != value)
                {
                    this.RaiseDataMemberChanging("createdon");
                    this.ValidateProperty("createdon", value);
                    this._createdon = value;
                    this.RaiseDataMemberChanged("createdon");
                }
            }
        }
        private global::System.DateTime _createdon;
        
        [global::System.ComponentModel.DataAnnotations.Association("Audiometer_Pacient1", "Id", "audiometer_Pacient")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Audiometer> Audiometer
        {
            get
            {
                if (this._Audiometer == null)
                {
                    this._Audiometer = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Audiometer>(this, "Audiometer", this.FilterAudiometer, this.AttachAudiometer, this.DetachAudiometer);
                }
                return this._Audiometer;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Audiometer> _Audiometer;
        private void AttachAudiometer(global::LightSwitchApplication.Implementation.Audiometer entity)
        {
            entity.Pacient = this;
        }
        private void DetachAudiometer(global::LightSwitchApplication.Implementation.Audiometer entity)
        {
            entity.Pacient = null;
        }
        private bool FilterAudiometer(global::LightSwitchApplication.Implementation.Audiometer entity)
        {
            return global::System.Object.Equals(entity.audiometer_Pacient, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Pacient.DetailsClass.IImplementation.Audiometer
        {
            get
            {
                return this.Audiometer;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Audiometer
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Audiometer :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Audiometer.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> takenon
        {
            get
            {
                return this._takenon;
            }
            set
            {
                if (this._takenon != value)
                {
                    this.RaiseDataMemberChanging("takenon");
                    this.ValidateProperty("takenon", value);
                    this._takenon = value;
                    this.RaiseDataMemberChanged("takenon");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _takenon;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int audiometer_Pacient
        {
            get
            {
                return this._audiometer_Pacient;
            }
            set
            {
                if (this._audiometer_Pacient != value)
                {
                    this.RaiseDataMemberChanging("audiometer_Pacient");
                    this.ValidateProperty("audiometer_Pacient", value);
                    this._audiometer_Pacient = value;
                    this.RaiseDataMemberChanged("audiometer_Pacient");
                }
            }
        }
        private int _audiometer_Pacient;
        
        [global::System.ComponentModel.DataAnnotations.Association("Audiometer_Pacient1", "audiometer_Pacient", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Pacient Pacient
        {
            get
            {
                if (this._Pacient == null)
                {
                    this._Pacient = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Pacient>(this, "Pacient", this.FilterPacient);
                }
                return this._Pacient.Entity;
            }
            set
            {
                Pacient previous = this.Pacient;
                if (previous != value)
                {
                    this.ValidateProperty("Pacient", value);
                    if (previous != null)
                    {
                        this._Pacient.Entity = null;
                        previous.Audiometer.Remove(this);
                    }
                    if (value != null)
                    {
                        this.audiometer_Pacient = value.Id;
                    }
                    else
                    {
                        this.audiometer_Pacient = default(int);
                    }
                    this._Pacient.Entity = value;
                    if (value != null)
                    {
                        value.Audiometer.Add(this);
                    }
                    this.RaisePropertyChanged("Pacient");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Pacient> _Pacient;
        private bool FilterPacient(global::LightSwitchApplication.Implementation.Pacient entity)
        {
            return global::System.Object.Equals(entity.Id, this.audiometer_Pacient);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Audiometer.DetailsClass.IImplementation.Pacient
        {
            get
            {
                return this.Pacient;
            }
            set
            {
                this.Pacient = (global::LightSwitchApplication.Implementation.Pacient)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("Audiogram_Audiometer1", "Id", "audiogram_Audiometer")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Audiogram> Audiogram
        {
            get
            {
                if (this._Audiogram == null)
                {
                    this._Audiogram = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Audiogram>(this, "Audiogram", this.FilterAudiogram, this.AttachAudiogram, this.DetachAudiogram);
                }
                return this._Audiogram;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Audiogram> _Audiogram;
        private void AttachAudiogram(global::LightSwitchApplication.Implementation.Audiogram entity)
        {
            entity.Audiometer = this;
        }
        private void DetachAudiogram(global::LightSwitchApplication.Implementation.Audiogram entity)
        {
            entity.Audiometer = null;
        }
        private bool FilterAudiogram(global::LightSwitchApplication.Implementation.Audiogram entity)
        {
            return global::System.Object.Equals(entity.audiogram_Audiometer, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Audiometer.DetailsClass.IImplementation.Audiogram
        {
            get
            {
                return this.Audiogram;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Audiogram
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Audiogram :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Audiogram.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Ear
        {
            get
            {
                return this._Ear;
            }
            set
            {
                if (this._Ear != value)
                {
                    this.RaiseDataMemberChanging("Ear");
                    this.ValidateProperty("Ear", value);
                    this._Ear = value;
                    this.RaiseDataMemberChanged("Ear");
                }
            }
        }
        private string _Ear;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Frequency
        {
            get
            {
                return this._Frequency;
            }
            set
            {
                if (this._Frequency != value)
                {
                    this.RaiseDataMemberChanging("Frequency");
                    this.ValidateProperty("Frequency", value);
                    this._Frequency = value;
                    this.RaiseDataMemberChanged("Frequency");
                }
            }
        }
        private int _Frequency;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Intensity
        {
            get
            {
                return this._Intensity;
            }
            set
            {
                if (this._Intensity != value)
                {
                    this.RaiseDataMemberChanging("Intensity");
                    this.ValidateProperty("Intensity", value);
                    this._Intensity = value;
                    this.RaiseDataMemberChanged("Intensity");
                }
            }
        }
        private int _Intensity;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string reponse
        {
            get
            {
                return this._reponse;
            }
            set
            {
                if (this._reponse != value)
                {
                    this.RaiseDataMemberChanging("reponse");
                    this.ValidateProperty("reponse", value);
                    this._reponse = value;
                    this.RaiseDataMemberChanged("reponse");
                }
            }
        }
        private string _reponse;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int audiogram_Audiometer
        {
            get
            {
                return this._audiogram_Audiometer;
            }
            set
            {
                if (this._audiogram_Audiometer != value)
                {
                    this.RaiseDataMemberChanging("audiogram_Audiometer");
                    this.ValidateProperty("audiogram_Audiometer", value);
                    this._audiogram_Audiometer = value;
                    this.RaiseDataMemberChanged("audiogram_Audiometer");
                }
            }
        }
        private int _audiogram_Audiometer;
        
        [global::System.ComponentModel.DataAnnotations.Association("Audiogram_Audiometer1", "audiogram_Audiometer", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Audiometer Audiometer
        {
            get
            {
                if (this._Audiometer == null)
                {
                    this._Audiometer = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Audiometer>(this, "Audiometer", this.FilterAudiometer);
                }
                return this._Audiometer.Entity;
            }
            set
            {
                Audiometer previous = this.Audiometer;
                if (previous != value)
                {
                    this.ValidateProperty("Audiometer", value);
                    if (previous != null)
                    {
                        this._Audiometer.Entity = null;
                        previous.Audiogram.Remove(this);
                    }
                    if (value != null)
                    {
                        this.audiogram_Audiometer = value.Id;
                    }
                    else
                    {
                        this.audiogram_Audiometer = default(int);
                    }
                    this._Audiometer.Entity = value;
                    if (value != null)
                    {
                        value.Audiogram.Add(this);
                    }
                    this.RaisePropertyChanged("Audiometer");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Audiometer> _Audiometer;
        private bool FilterAudiometer(global::LightSwitchApplication.Implementation.Audiometer entity)
        {
            return global::System.Object.Equals(entity.Id, this.audiogram_Audiometer);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Audiogram.DetailsClass.IImplementation.Audiometer
        {
            get
            {
                return this.Audiometer;
            }
            set
            {
                this.Audiometer = (global::LightSwitchApplication.Implementation.Audiometer)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ApplicationData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public ApplicationData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IApplicationDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-ApplicationDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Pacient> PacientEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Pacient>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Audiometer> AudiometerEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Audiometer>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Audiogram> AudiogramEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Audiogram>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new ApplicationDataEntityContainer();
        }
    
        internal sealed class ApplicationDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public ApplicationDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Pacient>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Audiometer>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Audiogram>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IApplicationDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Pacients_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Pacients_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Pacients_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPacients_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Pacient> EndPacients_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Pacients_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Pacients_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Pacients_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPacients_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Pacient> EndPacients_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Pacients_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Pacients_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Pacients_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPacients_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Pacient> EndPacients_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Audiometers_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Audiometers_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Audiometers_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAudiometers_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Audiometer> EndAudiometers_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Audiometers_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Audiometers_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Audiometers_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAudiometers_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Audiometer> EndAudiometers_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Audiometers_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Audiometers_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Audiometers_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAudiometers_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Audiometer> EndAudiometers_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Audiograms_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Audiograms_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Audiograms_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAudiograms_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Audiogram> EndAudiograms_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Audiograms_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Audiograms_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Audiograms_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAudiograms_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Audiogram> EndAudiograms_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Audiograms_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Audiograms_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Audiograms_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAudiograms_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Audiogram> EndAudiograms_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Pacient))
            {
                return new global::LightSwitchApplication.Implementation.Pacient();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Audiometer))
            {
                return new global::LightSwitchApplication.Implementation.Audiometer();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Audiogram))
            {
                return new global::LightSwitchApplication.Implementation.Audiogram();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.ApplicationData();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.Implementation.ApplicationData(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.Pacient) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Pacient);
            }
            if (typeof(global::LightSwitchApplication.Audiometer) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Audiometer);
            }
            if (typeof(global::LightSwitchApplication.Audiogram) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Audiogram);
            }
            return null;
        }
    }
}
